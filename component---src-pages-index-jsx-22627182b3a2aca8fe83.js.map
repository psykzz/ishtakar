{"version":3,"file":"component---src-pages-index-jsx-22627182b3a2aca8fe83.js","mappings":"kKAGaA,EAAiB,WAC5B,MAA8CC,EAAAA,UAAe,GAAtDC,EAAP,KAAwBC,EAAxB,KACAF,EAAAA,WAAgB,WACd,IAAIG,EAAoBC,KAAKC,MAC3BC,OAAOC,aAAaC,QAAQ,sBAEJ,OAAtBL,IACFA,EAAoBG,OAAOG,WACzB,gCACAC,SAEJR,EAAmBC,KAClB,IAEHH,EAAAA,WAAgB,WACVC,EACFU,SAASC,KAAKC,UAAUC,IAAI,QAE5BH,SAASC,KAAKC,UAAUE,OAAO,UAEhC,CAACd,IAEJ,IAAMe,EAAc,WAClBd,GAAoBD,GACpBK,OAAOC,aAAaU,QAClB,oBACAb,KAAKc,WAAWjB,KAIpB,OACE,uBACEkB,GAAG,YACHC,UAAcC,0CACZpB,ECnCa,gCDmCsB,IAErCqB,QAAS,kBAAMN,KACfO,WAAY,kBAAMP,KAClBQ,SAAS,IACT,aAAW,kBACXC,KAAK,YExCEC,EAAS,kBACpB,uBAAKN,UCHa,gCDIhB,qBAAGO,KAAK,6DAAR,UADF,oBACiG,2BADjG,oBAEmB,qBAAGA,KAAK,4CAAR,aAFnB,O,SECIC,EAAkB,SAAAC,GAatB,MAAO,CACLC,mBAFED,EAXJ,GAcEE,gBAHEF,EAXJ,GAeEG,WAJEH,EAXJ,GAgBEI,UALEJ,EAXJ,GAiBEK,UANEL,EAXJ,GAkBEM,aAPEN,EAXJ,GAmBEO,OAREP,EAXJ,GAoBEQ,OATER,EAXJ,GAqBES,OAVET,EAXJ,GAsBEU,QAXEV,EAXJ,KA0BWW,EAAO,WAClB,MAAoCxC,EAAAA,SAAe,IAA5CyC,EAAP,KAAmBC,EAAnB,KAEA1C,EAAAA,WAAgB,WACd2C,MAAM,qEACHC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAf,GAAI,OAAIA,EAAKkB,SAAWlB,EAAKA,KAAKmB,QAAQ,MAC/CJ,KAAKhB,GACLgB,KAAKF,KACP,IAEH,IAAMO,EAAoC,IAAtBR,EAAWJ,OACzBa,EAAkBT,EAAWV,gBAAjB,MAAsCU,EAAWX,mBAAjD,UACZqB,EACJV,EAAWT,WAAa,EAAxB,KAAiCS,EAAWT,WAA5C,YAAoE,KAEhEoB,EAAeH,EACnB,sBAAI7B,UAAU,aAAd,sBAEA,gCACE,sBAAIA,UAAU,aAAa8B,GAC1BC,GAAS,sBAAI/B,UAAU,aAAa+B,IAIzC,OACE,uBAAK/B,UCzDY,+BD0Df,uCACA,sCACCgC,EACD,gBAAC,KAAD,CAAMhC,UC5DS,8BD4DkBiC,GAAG,YAApC,kBEjDN,EAPc,kBACZ,gCACE,gBAACb,EAAD,MACA,gBAACd,EAAD,MACA,gBAAC3B,EAAD","sources":["webpack://ishtakar/./src/components/DarkmodeToggle/index.jsx","webpack://ishtakar/./src/components/DarkmodeToggle/styles.module.css","webpack://ishtakar/./src/components/Footer/index.jsx","webpack://ishtakar/./src/components/Footer/styles.module.css","webpack://ishtakar/./src/components/Hero/index.jsx","webpack://ishtakar/./src/components/Hero/hero.module.css","webpack://ishtakar/./src/pages/index.jsx"],"sourcesContent":["import React from \"react\"\nimport * as styles from \"./styles.module.css\"\n\nexport const DarkmodeToggle = () => {\n  const [prefersDarkmode, setPrefersDarkmode] = React.useState(true)\n  React.useEffect(() => {\n    let shouldUseDarkmode = JSON.parse(\n      window.localStorage.getItem(\"prefers-dark-mode\")\n    )\n    if (shouldUseDarkmode === null) {\n      shouldUseDarkmode = window.matchMedia(\n        \"(prefers-color-scheme: dark)\"\n      ).matches\n    }\n    setPrefersDarkmode(shouldUseDarkmode)\n  }, [])\n\n  React.useEffect(() => {\n    if (prefersDarkmode) {\n      document.body.classList.add(\"dark\")\n    } else {\n      document.body.classList.remove(\"dark\")\n    }\n  }, [prefersDarkmode])\n\n  const handleClick = () => {\n    setPrefersDarkmode(!prefersDarkmode)\n    window.localStorage.setItem(\n      \"prefers-dark-mode\",\n      JSON.stringify(!prefersDarkmode)\n    )\n  }\n\n  return (\n    <div\n      id=\"dm-toggle\"\n      className={`${styles.darkmode_toggle} ${\n        prefersDarkmode ? styles.is_dark : \"\"\n      }`}\n      onClick={() => handleClick()}\n      onKeyPress={() => handleClick()}\n      tabIndex=\"0\"\n      aria-label=\"Toggle darkmode\"\n      role=\"button\"\n    ></div>\n  )\n}\n","// extracted by mini-css-extract-plugin\nexport var darkmode_toggle = \"styles-module--darkmode_toggle--1rrCa\";\nexport var is_dark = \"styles-module--is_dark--2jAa7\";","import React from \"react\"\nimport * as styles from \"./styles.module.css\"\n\nexport const Footer = () => (\n  <div className={styles.footer}>\n    <a href=\"https://github.com/psykzz/ishtakar?utm_source=ishtakar.eu\">source</a> | made by psykzz<br />\n    data provided by <a href=\"https://nwdb.info?utm_source=ishtakar.eu\">nwdb.info</a> &hearts;\n  </div>\n)\n","// extracted by mini-css-extract-plugin\nexport var footer = \"styles-module--footer---eRqn\";","import { Link } from \"gatsby\"\nimport React from \"react\"\n\nimport * as styles from \"./hero.module.css\"\n\nconst parseServerData = data => {\n  const [\n    connectionCountMax,\n    connectionCount,\n    queueCount,\n    queueTime,\n    worldName,\n    worldSetName,\n    region,\n    status,\n    active,\n    worldId,\n  ] = data\n  return {\n    connectionCountMax,\n    connectionCount,\n    queueCount,\n    queueTime,\n    worldName,\n    worldSetName,\n    region,\n    status,\n    active,\n    worldId,\n  }\n}\n\nexport const Hero = () => {\n  const [serverData, setServerData] = React.useState({})\n\n  React.useEffect(() => {\n    fetch(\"https://nwdb.info/server-status/servers.json?worldId=3f1cd819f97e\")\n      .then(res => res.json())\n      .then(data => data.success && data.data.servers[0])\n      .then(parseServerData)\n      .then(setServerData)\n  }, [])\n\n  const maintenance = serverData.status === 4\n  const onlineStatus = `${serverData.connectionCount} / ${serverData.connectionCountMax} Online`\n  const queue =\n    serverData.queueCount > 0 ? `~ ${serverData.queueCount} in queue` : null\n\n  const serverStatus = maintenance ? (\n    <h4 className=\"subheader\">Server Maintenance</h4>\n  ) : (\n    <>\n      <h4 className=\"subheader\">{onlineStatus}</h4>\n      {queue && <h5 className=\"subheader\">{queue}</h5>}\n    </>\n  )\n\n  return (\n    <div className={styles.content}>\n      <h3>New World</h3>\n      <h1>Ishtakar</h1>\n      {serverStatus}\n      <Link className={styles.discord} to=\"/discord\">\n        Join Discord\n      </Link>\n    </div>\n  )\n}\n","// extracted by mini-css-extract-plugin\nexport var content = \"hero-module--content--2VuI9\";\nexport var discord = \"hero-module--discord--25Jgb\";","import React from \"react\"\nimport { DarkmodeToggle } from \"../components/DarkmodeToggle\"\nimport { Footer } from \"../components/Footer\"\nimport { Hero } from \"../components/Hero\"\nimport \"../styles/common.css\"\n\nconst Index = () => (\n  <>\n    <Hero />\n    <Footer />\n    <DarkmodeToggle />\n  </>\n)\nexport default Index\n"],"names":["DarkmodeToggle","React","prefersDarkmode","setPrefersDarkmode","shouldUseDarkmode","JSON","parse","window","localStorage","getItem","matchMedia","matches","document","body","classList","add","remove","handleClick","setItem","stringify","id","className","styles","onClick","onKeyPress","tabIndex","role","Footer","href","parseServerData","data","connectionCountMax","connectionCount","queueCount","queueTime","worldName","worldSetName","region","status","active","worldId","Hero","serverData","setServerData","fetch","then","res","json","success","servers","maintenance","onlineStatus","queue","serverStatus","to"],"sourceRoot":""}